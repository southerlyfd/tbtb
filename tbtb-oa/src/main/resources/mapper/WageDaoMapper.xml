<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tbtaobao.cloud.dao.WageDao">

    <resultMap id="BaseResultMap" type="com.tbtaobao.cloud.parameter.FindWageInfoData">
        <id column="wage_id" property="wageId" jdbcType="BIGINT"/>
        <result column="employee_id" property="employeeID" jdbcType="BIGINT" />
        <result column="base_pay" property="basePay" jdbcType="DECIMAL" />
        <result column="baseprize" property="baseprize" jdbcType="DECIMAL" />
        <result column="benifitprize" property="benifitprize" jdbcType="DECIMAL" />
        <result column="insurance" property="insurance" jdbcType="DECIMAL" />
        <result column="medicare" property="medicare" jdbcType="DECIMAL" />
        <result column="deprivepay" property="deprivepay" jdbcType="DECIMAL" />
        <result column="depriveprize" property="depriveprize" jdbcType="DECIMAL" />
        <result column="depriveattend" property="depriveattend" jdbcType="DECIMAL" />
        <result column="Name" property="name" jdbcType="VARCHAR" />
    </resultMap>

    <insert id="create" useGeneratedKeys="true" keyProperty="wageId">
        insert into wage
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="employeeID != null">
                    employee_id,
                </if>
                <if test="basePay != null">
                    base_pay,
                </if>
                <if test="baseprize != null">
                    baseprize,
                </if>
                <if test="benifitprize != null">
                    benifitprize,
                </if>
                <if test="insurance != null">
                    insurance,
                </if>
                <if test="medicare != null">
                    medicare,
                </if>
                <if test="deprivepay != null">
                    deprivepay,
                </if>
                <if test="depriveprize != null">
                    depriveprize,
                </if>
                <if test="depriveattend != null">
                    depriveattend,
                </if>
            </trim>
            <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
                <if test="employeeID != null">
                    #{employeeID},
                </if>
                <if test="basePay != null">
                    #{basePay},
                </if>
                <if test="baseprize != null">
                    #{baseprize},
                </if>
                <if test="benifitprize != null">
                    #{benifitprize},
                </if>
                <if test="insurance != null">
                    #{insurance},
                </if>
                <if test="medicare != null">
                    #{medicare},
                </if>
                <if test="deprivepay != null">
                    #{deprivepay},
                </if>
                <if test="depriveprize != null">
                    #{depriveprize},
                </if>
                <if test="depriveattend != null">
                    #{depriveattend},
                </if>
            </trim>
    </insert>

    <update id="update">
        update wage
        <trim prefix="set" suffixOverrides=",">
            <if test="basePay != null">base_pay = #{basePay},</if>
            <if test="baseprize != null">baseprize = #{baseprize},</if>
            <if test="benifitprize != null">benifitprize = #{benifitprize},</if>
            <if test="insurance != null">insurance = #{insurance},</if>
            <if test="medicare != null">medicare = #{medicare},</if>
            <if test="deprivepay != null">deprivepay = #{deprivepay},</if>
            <if test="depriveprize != null">depriveprize = #{depriveprize},</if>
            <if test="depriveattend != null">depriveattend = #{depriveattend},</if>
        </trim>
        where wage_id = #{wageId}
    </update>

    <delete id="delete">
        delete from wage where wage_id = #{wageId}
    </delete>

    <select id="findWageInfoLstCount" resultType="java.lang.Integer">
        SELECT
            COUNT( 1 )
        FROM
            wage AS w
            LEFT JOIN person AS p ON p.EmployeeID = w.employee_id
        WHERE 1=1
            <if test="parameter.name != null">
                AND INSTR(p.`Name`, #{parameter.name}) > 0
            </if>
            <if test="parameter.employeeID != null">
                AND p.EmployeeID = #{parameter.employeeID}
            </if>
    </select>

    <select id="findWageInfoLst" resultMap="BaseResultMap">
        SELECT
            w.*,
            p.Name
        FROM
        wage AS w
        LEFT JOIN person AS p ON p.EmployeeID = w.employee_id
        WHERE 1=1
        <if test="parameter.name != null">
            AND INSTR(p.`Name`, #{parameter.name}) > 0
        </if>
        <if test="parameter.employeeID != null">
            AND p.EmployeeID = #{parameter.employeeID}
        </if>
        LIMIT #{page.startIndex},#{page.onePageCount}
    </select>

    <select id="findWageOne" resultMap="BaseResultMap">
        SELECT
            w.*,
            p.Name
        FROM
        wage AS w
        LEFT JOIN person AS p ON p.EmployeeID = w.employee_id
        WHERE w.wage_id = #{wageId}
    </select>

    <select id="findWageIsThere" resultType="java.lang.Integer">
        select count(1) from wage as w where w.employee_id = #{employeeID}
    </select>
</mapper>